pipeline {
    agent any
    stages {
        stage('Setup') {
            steps {
                nodejs(nodeJSInstallationName: '16.17.1') {
                    sh 'yarn install --frozen-lockfile'
                    sh 'yarn run audit'
                }
            }
        }
        stage('Lint') {
            steps {
                nodejs(nodeJSInstallationName: '16.17.1') {
                    sh 'yarn lint'
                }
            }
        }
        stage('Unit tests') {
            steps {
                nodejs(nodeJSInstallationName: '16.17.1') {
                    sh 'yarn test:ci'
                }
            }
        }
        stage ('Lint Dockerfile') {
            agent {
                docker {
                    image 'hadolint/hadolint:latest-debian'
                    reuseNode true
                }
            }
            steps {
                sh 'hadolint Dockerfile'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('LocalSonar'){
                    sh "/var/lib/jenkins/tools/hudson.plugins.sonar.SonarRunnerInstallation/sonar-scanner/bin/sonar-scanner -Dsonar.host.url=https://infra.ebsi.xyz/sonar -Dsonar.projectName=conformance-api -Dsonar.projectVersion=1.0 -Dsonar.projectKey=conformance-api -Dsonar.sources=. -Dsonar.projectBaseDir=${WORKSPACE}"
                }
            }
        }
        stage("Quality Gate") {
            steps {
                waitForQualityGate abortPipeline: true
            }
        }
    }
    post {
        always {
            cleanWs()
            dir("${env.WORKSPACE}@script") {
                deleteDir()
            }
        }
    }
}
